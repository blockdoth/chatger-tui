name: Check and build chatger-tui

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  setup:
    name: Setup build env
    runs-on: self-hosted
    outputs:
      cache-key: ${{ steps.setup.outputs.cache-key }}
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
      
      - name: Setup nix cache
        uses: DeterminateSystems/magic-nix-cache-action@main
      
      - name: Cache Nix store
        uses: actions/cache@v3
        with:
          path: /nix/store
          key: nix-store-${{ runner.os }}-${{ hashFiles('**/*.nix') }}
          restore-keys: |
            nix-store-${{ runner.os }}-
  checks:
    name: Check chatger-tui
    needs: setup
    runs-on: self-hosted
    steps:
      - name: Check Rust formatting
        run: |
          nix develop --command cargo fmt --check
      - name: Check Rust linting
        run: |
          nix develop --command cargo clippy --no-deps

  build:
    name: Builds chatger-tui
    needs: checks
    strategy:
      matrix:
        os: [ self-hosted ]
        target: [x86_64-linux, aarch64-linux, windows]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Cargo registry cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index
          key: cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: cargo-index-

      - name: Set up Cargo cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: cargo-cache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-cache-
            cargo-git-

      - name: Cache target build outputs
        uses: actions/cache@v3
        with:
          path: |
            target/${{ matrix.target }}
          key: target-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            target-${{ matrix.target }}-

      - name: Build chatger-tui for ${{ matrix.target }}
        run: nix build .#${{ matrix.target }}
     
      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: chatgertui-${{ matrix.target }}
          path: ./result/bin/chatgertui

  release:
    name: Releases chatger-tui
    needs: build
    runs-on: self-hosted
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Upload release artifact to release
        uses: actions/download-artifact@v3
        with:
          name: chatgertui-x86_64-linux
          path: ./release-artifact

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          body: "Automated release for version ${{ github.ref_name }}"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload binary to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release-artifact/chatgertui
          asset_name: chatgertui
          asset_content_type: application/octet-stream
